package test;

public class ByteTest {

	public static void main(String[] args) {
		// 前提：在java中，默认都是int型  
        // 负数在计算机中用补码表示，转换规则为  
        // 十进求二进制负数情况  
        // 先求出与该负数相对应正整数二进制代码，然后所有位取反（不管符号位），末尾加1，不够位数时左边补1。  
        // 二进制求十进制负数情况  
        // 如果首位是1，表明是负整数。将所有位取反（不管符号位），末尾加1，所得数字就是该负数的绝对值。  
		
		/**
		 * 	原码：
		 *  反码：正数的反码与其原码相同； 负数 的反码是对其原码逐位取反，但符号位除外。
		 *  补码：正整数的补码是其二进制表示，与原码相同   负数补码 ，其对应正数二进制表示所有位取反（包括符号位，0变1，1变0）后加1
		 * 
		 *  129的二进制 为 1000 0001，因为是-129，根据补码运算规则，得到-129的补码表示 0111 1111，
		 *  因此计算结果显示为127
		 */
		System.out.println(Integer.toBinaryString(-129));//11111111111111111111111101111111
        System.out.println((byte) -129);    // 结果显示127  
        System.out.println(Integer.toBinaryString((byte) -129));//1111111
                                           
	}
}
